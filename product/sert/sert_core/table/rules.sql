--liquibase formatted sql
-------------------------------------------------------------------------------
-- Copyright (c) 2024 Oracle and/or its affiliates.
-- Licensed under the Universal Permissive License v 1.0 as shown
-- at https://oss.oracle.com/licenses/upl/
--------------------------------------------------------------------------------

--changeset mipotter:create_table_sert_core.rules_1721796676329 endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:;
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from all_tables where owner = 'SERT_CORE' and table_name = 'RULES';
CREATE TABLE sert_core.rules (
    rule_id               NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    rule_name             VARCHAR2(250) NOT NULL,
    rule_key              VARCHAR2(250) NOT NULL,
    category_id           NUMBER NOT NULL,
    risk_id               NUMBER,
    rule_severity_id      NUMBER NOT NULL,
    rule_type             VARCHAR2(100) NOT NULL,
    impact                VARCHAR2(100),
    apex_version          NUMBER NOT NULL,
    view_name             VARCHAR2(250),
    column_to_evaluate    VARCHAR2(250),
    component_id          VARCHAR2(250),
    component_name        VARCHAR2(250),
    column_name           VARCHAR2(250),
    item_name             VARCHAR2(250),
    shared_comp_name      VARCHAR2(250),
    operand               VARCHAR2(100),
    val_char              VARCHAR2(4000),
    val_number            NUMBER,
    case_sensitive_yn     VARCHAR2(1) DEFAULT ON NULL 'N',
    rule_criteria_type_id NUMBER,
    additional_where      VARCHAR2(4000),
    custom_query          VARCHAR2(4000),
    active_yn             VARCHAR2(1) DEFAULT ON NULL 'Y' NOT NULL,
    internal_yn           VARCHAR2(1) DEFAULT ON NULL 'N' NOT NULL,
    help_url              VARCHAR2(4000),
    builder_url_id        NUMBER,
    info                  CLOB,
    fix                   CLOB,
    time_to_fix           NUMBER,
    description           VARCHAR2(4000),
    created_by            VARCHAR2(250) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION', 'APP_USER'),
                                                      user) NOT NULL,
    created_on            TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL systimestamp NOT NULL,
    updated_by            VARCHAR2(250) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION', 'APP_USER'),
                                                      user),
    updated_on            TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL systimestamp
)
LOGGING;

ALTER TABLE sert_core.rules ADD CONSTRAINT rules_pk PRIMARY KEY ( rule_id );
--rollback drop table sert_core.rules;

--changeset mipotter:alter_table_sert_core.rules_add_constraint_rules_un_1721799552701 endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:;
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from all_constraints where owner = 'SERT_CORE' and constraint_name = 'RULES_UN';
ALTER TABLE sert_core.rules ADD CONSTRAINT rules_un UNIQUE ( rule_key, apex_version );
--rollback alter table sert_core.rules drop constraint RULES_UN;

--changeset mipotter:alter_table_sert_core.rules_add_constraint_rules_case_sensitive_yn_1721799412109 endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:;
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from all_constraints where owner = 'SERT_CORE' and constraint_name = 'RULES_CASE_SENSITIVE_YN';
ALTER TABLE sert_core.rules ADD CONSTRAINT rules_case_sensitive_yn CHECK ( case_sensitive_yn IN ( 'N', 'Y' ) );
--rollback alter table sert_core.rules drop constraint RULES_CASE_SENSITIVE_YN;

--changeset mipotter:alter_table_sert_core.rules_add_constraint_rules_active_yn_1721799419446 endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:;
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from all_constraints where owner = 'SERT_CORE' and constraint_name = 'RULES_ACTIVE_YN';
ALTER TABLE sert_core.rules ADD CONSTRAINT rules_active_yn CHECK ( active_yn IN ( 'N', 'Y' ) );
--rollback alter table sert_core.rules drop constraint RULES_ACTIVE_YN;

--changeset mipotter:alter_table_sert_core.rules_add_constraint_rules_internal_yn_1721799546817 endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:;
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from all_constraints where owner = 'SERT_CORE' and constraint_name = 'RULES_INTERNAL_YN';
ALTER TABLE sert_core.rules ADD CONSTRAINT rules_internal_yn CHECK ( internal_yn IN ( 'N', 'Y' ) );
--rollback alter table sert_core.rules drop constraint RULES_INTERNAL_YN;

