--liquibase formatted sql
-------------------------------------------------------------------------------
-- Copyright (c) 2024 Oracle and/or its affiliates.
-- Licensed under the Universal Permissive License v 1.0 as shown
-- at https://oss.oracle.com/licenses/upl/
--------------------------------------------------------------------------------

--changeset mipotter:create_table_sert_core.eval_results endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:;
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from dba_tables where owner = 'SERT_CORE' and table_name = 'EVAL_RESULTS';
CREATE TABLE sert_core.eval_results (
    eval_result_id   NUMBER
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    eval_id          NUMBER NOT NULL,
    rule_id          NUMBER NOT NULL,
    application_id   NUMBER,
    page_id          NUMBER,
    page_name        VARCHAR2(255), --to capture page name directly in eval result table so as to improve performance of eval page 10
    component_id     VARCHAR2(255),
    component_name   VARCHAR2(255),
    region_name      VARCHAR2(255), --to capture region name directly in eval result table so as to improve performance of eval page 10
    item_name        VARCHAR2(255),
    column_name      VARCHAR2(255),
    shared_comp_name VARCHAR2(255),
    result           CLOB NOT NULL,
    current_value    CLOB,
    valid_values     VARCHAR2(4000),
    created_by       VARCHAR2(255) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION', 'APP_USER'),
                                                      user) NOT NULL,
    created_on       TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL systimestamp NOT NULL,
    updated_by       VARCHAR2(255) DEFAULT ON NULL coalesce(sys_context('APEX$SESSION', 'APP_USER'),
                                                      user),
    updated_on       TIMESTAMP WITH LOCAL TIME ZONE DEFAULT ON NULL systimestamp
)
LOGGING;
ALTER TABLE sert_core.eval_results ADD CONSTRAINT eval_results_pk PRIMARY KEY ( eval_result_id );
--rollback not required

--changeset ssasanka:eval_results_alter1 stripComments:false runOnChange:true endDelimiter:/ runAlways:false
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from all_tab_columns where owner = 'SERT_CORE' and table_name = 'EVAL_RESULTS' and column_name = 'PAGE_NAME';
alter table  sert_core.eval_results add
  (page_name                      varchar2(500),
  region_name                     varchar2(500))
/
--rollback not required

--changeset mipotter:create_index_sert_core.eval_results_eval_results_eval_id_idx endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:; stripComments:false
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from dba_indexes where owner = 'SERT_CORE' and table_name = 'EVAL_RESULTS' and index_name = 'EVAL_RESULTS_EVAL_ID_IDX';
create index eval_results_eval_id_idx on sert_core.eval_results (eval_id);
--rollback not required

--changeset mipotter:create_index_sert_core.eval_results_eval_results_page_idx endDelimiter:; runOnChange:true runAlways:false rollbackEndDelimiter:; stripComments:false
--preconditions onFail:MARK_RAN onError:HALT
--precondition-sql-check expectedResult:0 select count(1) from dba_indexes where owner = 'SERT_CORE' and table_name = 'EVAL_RESULTS' and index_name = 'EVAL_RESULTS_PAGE_IDX';
create index eval_results_page_idx on sert_core.eval_results(page_id,eval_id,page_name);
--rollback not required

